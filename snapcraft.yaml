name: ccache
summary: Speeding-up the snap build by exploiting the compiler cache(CCache)
description: >
  This remote part sets up CCache and symbolic links for `gcc` and `g++` to make it automatically uses it when building.  For non default compiler commands you still have to customize the build systems manually via `CC`, `CXX` and other means.

  Refer the following snapcraft forum topic for more information regarding using this remote part:
  Speed-up Snap Building - doc - snapcraft.io
  https://forum.snapcraft.io/t/speed-up-snap-building/7979

version: current

grade: stable
confinement: strict

parts:
  ccache:
    plugin: nil
    build-packages:
    - ccache

    # Temporary workaround for Bug #1776807 “`nil` plugin shouldn't pull anything to the srctre...” : Bugs : Snapcraft
    # https://bugs.launchpad.net/snapcraft/+bug/1776807
    override-pull: 'true'

    override-build: |
      set -eu

      install \
        --directory \
        --verbose \
        "${SNAPCRAFT_PART_INSTALL}"/bin
      ln \
        --force \
        --symbolic \
        --verbose \
        "$(which ccache)" \
        "${SNAPCRAFT_PART_INSTALL}"/bin/gcc
      ln \
        --force \
        --symbolic \
        --verbose \
        "$(which ccache)" \
        "${SNAPCRAFT_PART_INSTALL}"/bin/g++
    prime:
    - -*
  tests:
    after:
    - ccache

    plugin: dump
    source: snap/local/tests
    build-packages:
    - build-essential

    override-build: |
      set \
        -o errexit \
        -o xtrace

      snapcraftctl build
      ccache \
        --show-stats
      gcc \
        -c \
        hello.c
      gcc \
        -o hello \
        hello.o
      ccache \
        --show-stats
      set \
        +o xtrace
      printf -- \
        'Verify if the statistics increases by one.\n'

    stage:
    - -*
